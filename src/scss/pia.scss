// Bootstrap
@import "bootstrap/variables";
@import "bootstrap/mixins";
@import "bootstrap/normalize";
@import "bootstrap/print";
@import "bootstrap/glyphicons";
@import "bootstrap/scaffolding";
@import "bootstrap/type";
@import "bootstrap/code";
@import "bootstrap/grid";
@import "bootstrap/tables";
@import "bootstrap/forms";
@import "bootstrap/buttons";
@import "bootstrap/tooltip";
@import "bootstrap/list-group";
@import "bootstrap/dropdowns";

// Extension
@import "layout";
@import "colors";
@import "roboto_font";
@import "extensions/popover";

// components
@import "component/Switch";
@import "component/PageTitle";
@import "component/StatusText";
@import "component/CompanyLogo";
@import "component/CurrentRegion";
@import "component/SettingsIcon";
@import "component/OfflineWarning";
@import "component/RegionList";
@import "component/RegionListItem";
@import "component/RegionGrid";
@import "component/RegionGridItem";
@import "component/RegionSorter";
@import "component/RegionViewToggle";
@import "component/LanguageDropdown";
@import "component/SettingItem";
@import "component/SettingSection";
@import "component/DebugSettingItem";
@import "component/LoginForm";
@import "component/DeleteLogButton";
@import "component/ClipboardButton";
@import "component/bypasslist/BypassItem";
@import "component/bypasslist/UserRules";
@import "component/bypasslist/PopularRule";
@import "component/bypasslist/PopularRules";
@import "component/checkbox/RememberMeCheckbox";

// templates
@import "templates/AuthenticatedTemplate";
@import "templates/BypassListTemplate";
@import "templates/ChangeLogTemplate";
@import "templates/ChangeRegionTemplate";
@import "templates/ChromeUpgradeTemplate";
@import "templates/DebugLogTemplate";
@import "templates/LoginTemplate";
@import "templates/PleaseWaitTemplate";
@import "templates/SettingsTemplate";
@import "templates/UncontrollableTemplate";
@import "custom";

html {
  margin: 0;
  color: #4D4D4D;
  font-family: 'Roboto';
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Roboto", Helvetica, Arial, sans-serif;
}

*, *:before, *:after { box-sizing: inherit; }

#pia {
  background-color: #333542;
  min-height: $appMinHeight;
  width: $appWidth;
  padding: $appVertPadding $appSidePadding;
  overflow-x: hidden;
}

// upcase-bold class is no longer necessary

.col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9,
.col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9,
.col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9,
.col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9 {
  padding-left: 0px;
  padding-right: 0px;
}

// this is in all the i18n css files
// not sure if this is used anywhere
// another candidate to turn into a component
.select-style {
  padding: 0;
  margin: 0;
  border: 1px solid #ccc;
  width: 95%;
  border-radius: 3px;
  overflow: hidden;
  background-color: #fff;
  background: #fff url('/images/down.png') no-repeat 97% 50%;

  span {
    pointer-events: none;
    float: left;
    display: inline;
    position: absolute;
    margin: 6px 8px;
    color: #aaa;
  }

  select {
    padding: 6px 8px;
    width: 130%;
    border: none;
    box-shadow: none;
    padding-left: 60px;
    background-color: transparent;
    background-image: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    &:focus { outline: none; }
  }
}

// this is used in the i18n translations files
.bold-underline {
  font-weight: bold;
  text-decoration: underline;
}

// loader is in login-form, region-list, region-grid, and pleasewaittemplate
// this is a good candidate to turn into a component
.login-loader {
  width: 10px !important;
  height: 10px !important;
  margin: 0px auto !important;
}
.loader,
.loader:after {
  border-radius: 50%;
  width: 10em;
  height: 10em;
}
.loader {
  margin: 60px auto;
  font-size: 10px;
  position: relative;
  text-indent: -9999em;
  border-top: 1.1em solid rgba(58,181,73, 0.2);
  border-right: 1.1em solid rgba(58,181,73, 0.2);
  border-bottom: 1.1em solid rgba(58,181,73, 0.2);
  border-left: 1.1em solid #3ab549;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-animation: load8 1.1s infinite linear;
  animation: load8 1.1s infinite linear;
}
@-webkit-keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes load8 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

// settingswarning is in both BypassListTemplate and SettingsTemplate
// this is another candidate for a component
.settingswarning {
    background: #FCF2E9;
    background-image: url('../images/settings_warning_2x.png');
    background-size: 20px;
    background-position: 20px center;
    background-repeat: no-repeat;
    padding: 10px 25px 10px 50px;
    color: #EA6105;
    font-size: 11px;
}

.settingswarning-connected {
    background: #E0F3DB;
    background-image: url('../images/selected_2x.png');
    background-size: 20px;
    background-position: 20px center;
    background-repeat: no-repeat;
    padding: 10px 25px 10px 50px;
    color: #367D25;
    font-size: 11px;
}

.settingswarning-disconnected {
    background: #FCF2E9;
    background-image: url('../images/settings_warning_2x.png');
    background-size: 20px;
    background-position: 20px center;
    background-repeat: no-repeat;
    padding: 10px 25px 10px 50px;
    color: #EA6105;
    font-size: 11px;
}


// globally used styles/components
input { font-family: 'Roboto'; }
input[type="checkbox"]:focus { outline: 0; }
input[type=text] { background-color: white; }
a, a:active, a:focus, a:hover { color: #39b54a; }

.error-boundary { color: red; }

// used in debuglogtemplate and userrules.jsx files
.bold { font-weight: bold; }

.noselect, .macetooltip {
  -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}

.checkbox-container {
  width: 18px;
  position: relative;

  .checkbox-input.disabled {
    cursor: not-allowed;
  }

  label.checkbox-facade {
    position: absolute;
    width: 18px;
    height: 18px;
    top: 0;
    left: 0;
    background: #fff;
    border:1px solid #ccc;
    border-radius: 2px;
    pointer-events:none;

    &:after {
      content: '';
      display: block;
      width: 5px;
      height: 10px;
      border: 1px solid #5cb85c;
      border-width: 0 1px 1px 0;
      transform: rotate(45deg);
      position: absolute;
      top: 1px;
      left: 6px;
      opacity: 0;
    }
  }

  &:hover {
    label.checkbox-facade {
      border: 1px solid #5cb85c;
      opacity: 1;
    }
  }

  input[type=checkbox] {
    width: 18px;
    height: 18px;
    margin: 0px !important;
  }

  input[type=checkbox]:checked + label.checkbox-facade:after { opacity: 1; }

  input[type=checkbox]:checked + label.checkbox-facade { border: 1px solid #5cb85c; }

  .dropdown {
    overflow: hidden;
    width: 138px;
    height: 30px;
    float: right;
    margin-right: -20px;

    &:before {
      content: '';
      display: block;
      width: 13px;
      height: 11px;
      position: absolute;
      right: 7px;
      top: 12px; // 9px
      background-image: url(../images/expand_2x.png);
      background-size: 25px;
      background-position: -14px -11px;
      background-repeat: no-repeat;
      pointer-events: none;
    }
  }

  .dropdown:hover::before { background-position: -14px 0px; }

  input { cursor: pointer; }
}
